#include "services_microboone.fcl"
#include "largeantmodules_microboone.fcl"
#include "mcreco.fcl"
#include "time_memory_tracker_microboone.fcl"
#include "IsolatedProton_filter.fcl"

process_name: IsolatedProtonFilter

services:
{
  scheduler:    { defaultExceptions: false }    # Make all uncaught exceptions fatal.
  # Load the service that manages root files for histograms.
  TFileService: { fileName: "gen_filter_hist.root" }
  TimeTracker:             @local::microboone_time_tracker
  MemoryTracker:           @local::microboone_memory_tracker
  RandomNumberGenerator: {} # ART native random number generator
  FileCatalogMetadata:  @local::art_file_catalog_mc
  IFDH: {}
}

#Start each new event with an empty event.
source:
{
  module_type: RootInput
  maxEvents:   -1          # Number of events to create
}

physics:
{

  filters:
  {
      IsolatedProtonFilter: @local::IsolatedProtonFilter
  }

  simulate: [ IsolatedProtonFilter ]
  stream1:  [ out1 ]
  trigger_paths: [simulate] 
  end_paths:     [stream1]  
}

outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "%ifb_%tc_filtered.root"
   dataTier:    "simulated"
   saveMemoryObjectThreshold: 0
   compressionLevel: 1
   fastCloning: false
   SelectEvents: [simulate]
 }
}
